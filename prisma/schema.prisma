// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id             String   @id
  shop           String   @unique
  state          String
  isOnline       Boolean  @default(false)
  scope          String?
  expires        DateTime?
  accessToken    String
  userId         Int?
  firstName      String?
  lastName       String?
  email          String?
  accountOwner   Boolean   @default(false)
  locale         String?
  collaborator   Boolean?  @default(false)
  emailVerified  Boolean?  @default(false)

  // Relationships
  widgets Widget[]
}

model Widget {
  id        Int       @id @default(autoincrement())
  shop      String
  title     String
  template  String    @default("quantity-breaks") // template type: quantity-breaks, bxgy, etc.
  status    Boolean    @default(false)
  settings  Json       // widget-specific settings
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  // Relationships
  session   Session   @relation(fields: [shop], references: [shop], onDelete: Cascade)
  discounts DiscountSettings[]
}

model DiscountSettings {
  id           Int       @id @default(autoincrement())
  widgetId     Int
  bundleName   String
  discountName String
  discountLogic Json       // quantity break, rules, etc.
  appliesTo    DiscountTarget
  productIds   String[]    // array of product IDs if appliesTo = SPECIFIC_PRODUCTS
  collectionIds String[]   // array of collection IDs if appliesTo = SPECIFIC_COLLECTIONS
  startDate    DateTime
  endDate      DateTime?

  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  // Relationships
  widget Widget @relation(fields: [widgetId], references: [id], onDelete: Cascade)
}

enum DiscountTarget {
  ALL_PRODUCTS
  SPECIFIC_PRODUCTS
  SPECIFIC_COLLECTIONS
  ALL_PRODUCTS_NOT_SOME
}

